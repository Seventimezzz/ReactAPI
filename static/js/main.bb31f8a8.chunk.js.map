{"version":3,"sources":["services/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/pages/404.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["useMarverlService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","className","href","renderItems","errorMessage","spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","View","imgStyle","RandomChar","setChar","updateChar","onChatLoaded","Math","floor","random","content","mjolnir","CharList","props","charList","setCharList","setNewItemLoading","charEnded","setCharEnded","onCharListLoaded","newCharList","NewItemLoading","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","Page404","to","AppHeader","end","activeStyle","color","isActive","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bb31f8a8.chunk.js","sourcesContent":["import {useHttp} from '../hooks/http.hook';\r\n\r\n// Чистый js\r\nconst useMarverlService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=e69fc5b0ded42eb55340c401ac49d086';\r\n    const _baseOffset = 210;\r\n\r\n    //Получение первых 9 персонажей\r\n    // request тот же getResurce, только еще с работам с состоянями\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    //Получерие персонажа по id\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        //Сокращем код, возвращаем сразу более короткий путь\r\n        return _transformCharacter(res.data.results[0]);\r\n        //return this._transformCharacter(res);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.request[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...`  : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComics}\r\n}\r\n\r\nexport default useMarverlService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'aplication/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, [])\r\n\r\n    // Если выйдет персонаж 404 чтобы могли очистить ошибку\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useState, useEffect} from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <a href=\"#\">\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </a>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarverlService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n\n    // Новое свойство класса типо this.data.marvelService\n    // После того как имортировали сюда класс засовываем его в переменную\n    const {loading, error, getCharacter, clearError} = useMarverlService();\n\n    useEffect(() => {\n        updateChar();\n        //const timerId = setInterval(this.updateChar, 3000);\n\n        return () => {\n            //clearInterval(timerId);\n        }\n    }, [])\n\n    const onChatLoaded = (char) => {\n        setChar(char);\n    }\n\n    //Получаем данные об персонаже по случайному айди \n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            //Аргумент из then автоматически перейдет в функцию this.onChatLoaded как char\n            .then(onChatLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarverlService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n    \n    const {loading, error, getAllCharacters} =  useMarverlService();\n\n    //Вызывается один раз когда заупскается проект без аргумента\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    // Создание новых 9 персонажей\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    // В чар лите лежат данные о 9 персонажей\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(NewItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended)\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    // el ссылка на дом эллемент скадываем все в itemsRef\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    // Для упарления клавой\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport PropTypes from 'prop-types';\n\nimport useMarverlService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarverlService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        // в then получаем данные записались в аргмент char\n        getCharacter(charId)\n            .then(onChatLoaded)\n    }\n\n    const onChatLoaded = (char) => {\n        setChar(char);\n    }\n\n    //Заглушка пока не выбран перс\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} style={imgStyle} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'Not found'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                } \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.development\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // Обновляет стейт при ошибке\r\n    // static getDerivedStateFromError(error) {\r\n    //     return {error: true};\r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage></ErrorMessage>\r\n            <p style={{'text-Align': 'center', 'fontWeight': 'bold', 'fontSize': '34px'}}>Странца не найден</p>\r\n            <Link style={{'marginTop': '30px', 'textAlign': 'center'}} to='/'>Веонуться назад</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import './appHeader.scss';\nimport {Link, NavLink} from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink\n                    end\n                    activeStyle={{'color': '#9f0013'}}\n                    style={({isActive}) => ({color: isActive ? '#9f0013' : null})}\n                    to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                    end \n                    activeStyle={{'color': '#9f0013'}} \n                    style={({isActive}) => ({color: isActive ? '#9f0013' : null})}\n                    to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\n\nimport {MainPage, ComicsPage, Page404} from '../pages';\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n    \n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<ComicsPage/>}/>ComicsPage\n                        <Route path=\"/comics\" element={<MainPage/>}/>\n                        <Route path='*' element={<Page404/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n//import MarverlService from './services/MarvelService';\n\nimport './style/style.scss';\n\n// После того как имортировали сюда класс засовываем его в переменную\n//const marvelService = new MarverlService();\n\n//вызываем эту функцию и получаем промис с реузльтатом\n//marvelService.getAllCharactres().then(res => console.log(res));\n\n// Только один персонаж по айди\n//marvelService.getCharactres(1011052).then(res => console.log(res));\n\n\n// Выводим только имена\n//marvelService.getAllCharactres().then(res => res.data.results.forEach(item => console.log(item.name)));\n\nReactDOM\n  .createRoot(document.getElementById('root'))\n  .render(\n   \n      <App />\n    \n  );\n\n\n"],"sourceRoot":""}